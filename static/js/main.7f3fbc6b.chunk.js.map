{"version":3,"sources":["App.jsx","index.js"],"names":["App","useState","pycount","setpycount","cpp","setcppcount","java","setjavacount","js","setjscount","C","setccount","cs","setcscount","ts","settscount","className","onClick","ReactDOM","render","document","getElementById"],"mappings":"yMAyFeA,G,MAtFL,WAAK,IAAD,EACeC,mBAAS,GADxB,mBACLC,EADK,KACGC,EADH,OAKWF,mBAAS,GALpB,mBAKNG,EALM,KAKFC,EALE,OAScJ,mBAAS,GATvB,mBASLK,EATK,KASAC,EATA,OAaUN,mBAAS,GAbnB,mBAaLO,EAbK,KAaFC,EAbE,OAiBQR,mBAAS,GAjBjB,mBAiBLS,EAjBK,KAiBHC,EAjBG,OAsBUV,mBAAS,GAtBnB,mBAsBLW,EAtBK,KAsBFC,EAtBE,OA0BUZ,mBAAS,GA1BnB,mBA0BLa,EA1BK,KA0BFC,EA1BE,KA+BZ,OACE,mCACE,qBAAKC,UAAU,iBAAf,SACE,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,QAAf,SACE,iDAEF,sBAAKA,UAAU,UAAf,UACE,wCACA,+BAAOd,IACP,wBAAQe,QAvCN,kBAAId,EAAWD,EAAQ,IAuCzB,eACA,wBAAQe,QAvCN,WAAiBd,EAAF,IAAVD,EAAuBA,EAAQ,EAAc,IAuCpD,kBAEF,sBAAKc,UAAU,UAAf,UACE,qCACA,+BAAOZ,IACP,wBAAQa,QAzCN,kBAAIZ,EAAYD,EAAI,IAyCtB,eACA,wBAAQa,QAzCN,WAAaZ,EAAF,IAAND,EAAoBA,EAAI,EAAe,IAyC9C,kBAEF,sBAAKY,UAAU,UAAf,UACE,sCACA,+BAAOV,IACP,wBAAQW,QA3CJ,kBAAIV,EAAaD,EAAK,IA2C1B,eACA,wBAAQW,QA3CJ,WAAcV,EAAF,IAAPD,EAAsBA,EAAK,EAAgB,IA2CpD,kBAEF,sBAAKU,UAAU,UAAf,UACE,4CACA,+BAAOR,IACP,wBAAQS,QA7CN,kBAAIR,EAAWD,EAAG,IA6CpB,eACA,wBAAQS,QA7CN,WAAYR,EAAF,IAALD,EAAkBA,EAAG,EAAc,IA6C1C,kBAEF,sBAAKQ,UAAU,UAAf,UACE,mCACA,+BAAON,IACP,wBAAQO,QA/CP,kBAAIN,EAAUD,EAAE,IA+CjB,eACA,wBAAQO,QA/CP,WAAWN,EAAF,IAAJD,EAAgBA,EAAE,EAAa,IA+CrC,kBAEF,sBAAKM,UAAU,UAAf,UACE,oCACA,+BAAOJ,IACP,wBAAQK,QAhDP,kBAAIJ,EAAWD,EAAG,IAgDnB,eACA,wBAAQK,QAhDP,WAAYJ,EAAF,IAALD,EAAkBA,EAAG,EAAc,IAgDzC,kBAEF,sBAAKI,UAAU,UAAf,UACE,4CACA,+BAAOF,IACP,wBAAQG,QAlDN,kBAAIF,EAAWD,EAAG,IAkDpB,eACA,wBAAQG,QAlDN,WAAYF,EAAF,IAALD,EAAkBA,EAAG,EAAc,IAkD1C,2BC3EZI,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7f3fbc6b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.scss\";\n\nconst App=()=>{\n  const [pycount,setpycount]=useState(0);\n  const incpy=()=>setpycount(pycount+1);\n  const decpy=()=>{pycount!==0?setpycount(pycount-1):setpycount(0)}\n\n  const[cpp,setcppcount]=useState(0);\n  const incpp=()=>setcppcount(cpp+1);\n  const decpp=()=>{cpp!==0?setcppcount(cpp-1):setcppcount(0)};\n\n  const [java,setjavacount]=useState(0);\n  const incjava=()=>setjavacount(java+1);\n  const decjava=()=>{java!==0?setjavacount(java-1):setjavacount(0)};\n\n  const [js,setjscount]=useState(0);\n  const incjs=()=>setjscount(js+1);\n  const decjs=()=>{js!==0?setjscount(js-1):setjscount(0)};\n\n  const [C,setccount]=useState(0);\n  const incC=()=>setccount(C+1);\n  const decC=()=>{C!==0?setccount(C-1):setccount(0)};\n\n\n  const [cs,setcscount]=useState(0);\n  const incs=()=>setcscount(cs+1);\n  const decs=()=>{cs!==0?setcscount(cs-1):setcscount(0)};\n\n  const [ts,settscount]=useState(0);\n  const incts=()=>settscount(ts+1);\n  const dects=()=>{ts!==0?settscount(ts-1):settscount(0)};\n  \n\n  return (\n    <>\n      <div className=\"content-center\">\n        <div className=\"card\">\n          <div className=\"title\">\n            <h1>voting center</h1>\n          </div>\n          <div className=\"pannel1\">\n            <h2>Python</h2>\n            <span>{pycount}</span>\n            <button onClick={incpy}>+</button>\n            <button onClick={decpy}>-</button>\n          </div>\n          <div className=\"pannel1\">\n            <h2>C++</h2>\n            <span>{cpp}</span>\n            <button onClick={incpp}>+</button>\n            <button onClick={decpp}>-</button>\n          </div>\n          <div className=\"pannel1\">\n            <h2>Java</h2>\n            <span>{java}</span>\n            <button onClick={incjava}>+</button>\n            <button onClick={decjava}>-</button>\n          </div>\n          <div className=\"pannel1\">\n            <h2>JavaScript</h2>\n            <span>{js}</span>\n            <button onClick={incjs}>+</button>\n            <button onClick={decjs}>-</button>\n          </div>\n          <div className=\"pannel1\">\n            <h2>C</h2>\n            <span>{C}</span>\n            <button onClick={incC}>+</button>\n            <button onClick={decC}>-</button>\n          </div>\n          <div className=\"pannel1\">\n            <h2>C#</h2>\n            <span>{cs}</span>\n            <button onClick={incs}>+</button>\n            <button onClick={decs}>-</button>\n          </div>\n          <div className=\"pannel1\">\n            <h2>TypeScript</h2>\n            <span>{ts}</span>\n            <button onClick={incts}>+</button>\n            <button onClick={dects}>-</button>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}